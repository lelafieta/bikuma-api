// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  firstName String?
  lastName  String?
  fullName  String?
  email     String     @unique
  role      String     @default("USER")
  profile   Profile?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  Campaign  Campaign[]
  Ong       Ong[]

  @@map("users")
}

model Profile {
  id          Int      @id @default(autoincrement())
  avatarUrl   String?
  bio         String?
  location    String?
  isVerified  Boolean? @default(false)
  phoneNumber String?
  donationQtd BigInt   @default(0)
  campaignQtd BigInt   @default(0)
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("profiles")
}

model Campaign {
  id                    Int       @id @default(autoincrement())
  title                 String?
  description           String?
  beneficiaryName       String?
  fundraisingGoal       Float?
  fundsRaised           Float?
  imageCoverUrl         String?
  institution           String?
  location              String?
  latitude              Float?
  longitude             Float?
  numberOfContributions Int?
  phoneNumber           String?
  priority              Int?      @default(0)
  endDate               DateTime?
  startDate             DateTime?
  isUrgent              Boolean?  @default(false)
  isActivate            Boolean?  @default(true)
  campaignType          String?
  currency              String    @default("AOA")
  birth                 DateTime?
  categoryId            Int?
  ongId                 Int?
  userId                Int?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @default(now())
  Category              Category? @relation(fields: [categoryId], references: [id])
  User                  User?     @relation(fields: [userId], references: [id])
  Ong                   Ong?      @relation(fields: [ongId], references: [id])

  @@map("campaigns")
}

model Category {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  createdAt   DateTime   @default(now())
  Campaign    Campaign[]

  @@map("categories")
}

model Ong {
  id              Int        @id @default(autoincrement())
  about           String?
  bio             String?
  coverImageUrl   String?
  isVerified      Boolean?   @default(false)
  mission         String?
  name            String?
  phoneNumber     String?
  profileImageUrl String?
  servicesNumber  BigInt?    @default(0)
  supportsNumber  BigInt?    @default(0)
  vision          String?
  status          String     @default("pending")
  email           String?
  website         String?
  location        String?
  latitude        Float?
  longitude       Float?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime?  @default(now())
  userId          Int
  user            User?      @relation(fields: [userId], references: [id])
  Campaign        Campaign[]

  @@map("ongs")
}
